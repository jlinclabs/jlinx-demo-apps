#!/usr/bin/env bash

set -e
set -x

APP_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && cd .. && pwd)
APP_PATH=$1

# if no app path exists
if [[ -d "$APP_PATH" ]];
then
  true
else
  echo "app does not exist $APP_PATH" 1>&2
  exit 1
fi


# â›„ npx parcel help serve
# Usage: parcel serve [options] [input...]

# starts a development server

# Options:
#   --public-url <url>         the path prefix for absolute urls
#   --open [browser]           automatically open in specified browser, defaults to default browser
#   --watch-for-stdin          exit when stdin closes
#   --lazy                     Build async bundles on demand, when requested in the browser
#   --no-hmr                   disable hot module replacement
#   -p, --port <port>          set the port to serve on. defaults to $PORT or 1234
#   --host <host>              set the host to listen on, defaults to listening on all interfaces
#   --https                    serves files over HTTPS
#   --cert <path>              path to certificate to use with HTTPS
#   --key <path>               path to private key to use with HTTPS
#   --hmr-port <port>          hot module replacement port
#   --hmr-host <host>          hot module replacement host
#   --no-cache                 disable the filesystem cache
#   --config <path>            specify which config to use. can be a path or a package name
#   --cache-dir <path>         set the cache directory. defaults to ".parcel-cache"
#   --no-source-maps           disable sourcemaps
#   --target [name]            only build given target(s) (default: [])
#   --log-level <level>        set the log level (choices: "none", "error", "warn", "info", "verbose")
#   --dist-dir <dir>           output directory to write to when unspecified by targets
#   --no-autoinstall           disable autoinstall
#   --profile                  enable build profiling
#   -V, --version              output the version number
#   --detailed-report [count]  print the asset timings and sizes in the build report
#   --reporter <name>          additional reporters to run (default: [])
#   -h, --help                 display help for command

PORT=$(dotenv -e ${APP_PATH}/.env -p PORT)
echo PORT=${PORT}

cat > "${APP_ROOT}/.proxyrc" <<-EOF
{
  "/api": {
    "target": "${SERVER_URL}"
  }
}
EOF


npx parcel serve \
  --port ${PORT} \
  --cache-dir "${APP_PATH}/tmp/cache" \
  --dist-dir "${APP_PATH}/client-build" \
  "${APP_PATH}/client/index.html"
  # --help \
  #   --hmr-port <port>          hot module replacement port
  #   --hmr-host <host>          hot module replacement host

# export SERVER=true
# export HTTPS=false
# export BROWSER=none
# export DANGEROUSLY_DISABLE_HOST_CHECK=true
# export WDS_SOCKET_HOST=localhost
# # export API_SERVER=\"${API_SERVER}\"
# export DISABLE_ESLINT_PLUGIN=true
# # exec npm run start

